type Query {
  hello(name: String): String!
  courses: [Course]
  gebruikers: [Gebruiker]
  me: User!
}

type Gebruiker {
  id: ID!
  name: String!
  email: String!
}
input GebruikerInput {
  name: String!
  email: String!
}
type Course {
  id: ID!
  title: String
  date: String!
  takenby: [User!]!
}

type SuccessMessage {
  message: String
}
input UserProfileInput {
  name: String
  photoURL: String
}
type User {
  id: ID!
  email: String
  password: String
  name: String
  photoURL: String
}

input CourseInput {
  title: String!
  date: String!
}

type Mutation {
  createCourse(input: CourseInput): Course
  createGebruiker(input: GebruikerInput): Gebruiker
  updateProfile(input: UserProfileInput): User!
  signup(email: String!, password: String!, name: String, photoUrl: String): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  requestReset(email: String!): SuccessMessage
  subscribetoCourse(courseId: ID): Course
}
